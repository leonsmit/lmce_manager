# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:05 -0500 2008
#
# == Synopsis
# Database Table: pluto_media.Playlist
#
# * primary keys: PK_Playlist
# * foreign keys: FK_Picture
# * external keys: EK_User
#
# == References
# * PlutoMedia::LmcePicture
#
# == Referenced By
# * PlutoMedia::LmcePlaylistEntry
# * PlutoMedia::LmceBookmark
#
# == Database Table Columns
#   * PK_Playlist     [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * EK_User         [Type:int(11), Default:0, Key:MUL, Null:NO]
#   * Name            [Type:varchar(100), Default:NULL, Null:NO]
#   * FK_Picture      [Type:int(11), Default:NULL, Null:YES]
#   * psc_id          [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch       [Type:int(11), Default:NULL, Null:YES]
#   * psc_user        [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen      [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod         [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:NO]
#   * psc_restrict    [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * belongs_to lmce_picture
# * has_many lmce_bookmarks
# * has_many lmce_playlist_entries
#

class PlutoMedia::LmcePlaylist < PlutoMediaDatabase
  set_table_name "Playlist"
  set_primary_key "PK_Playlist"

  # foreign key references
  # FK_Playlist references PlutoMedia::LmcePicture (FK_Picture)
  belongs_to  :lmce_picture,
      :class_name => "PlutoMedia::LmcePicture",
      :foreign_key => "FK_Picture"

  # 1:n  (FK_Playlist)
  has_many  :lmce_playlist_entries,
      :class_name => "PlutoMedia::LmcePlaylistEntry",
      :foreign_key => "FK_Playlist"

  # 1:n  (FK_Playlist)
  has_many  :lmce_bookmarks,
      :class_name => "PlutoMedia::LmceBookmark",
      :foreign_key => "FK_Playlist"

  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

