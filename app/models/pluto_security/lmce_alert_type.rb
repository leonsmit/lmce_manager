# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:05 -0500 2008
#
# == Synopsis
# Database Table: pluto_security.AlertType
#
# * primary keys: PK_AlertType
# * foreign keys: 
# * external keys: 
#
# == References
#
# == Referenced By
# * PlutoSecurity::LmceAlert
#
# == Database Table Columns
#   * PK_AlertType        [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * DelayBeforeAlarm    [Type:smallint(5), Default:NULL, Null:YES]
#   * ExitDelay           [Type:smallint(5), Default:NULL, Null:YES]
#   * AlarmDuration       [Type:int(11), Default:NULL, Null:YES]
#   * PoolAlerts          [Type:int(11), Default:NULL, Null:YES]
#   * Description         [Type:varchar(20), Default:NULL, Null:NO]
#   * Define              [Type:varchar(20), Default:NULL, Null:YES]
#   * PhoneExtension      [Type:int(11), Default:NULL, Null:YES]
#   * psc_id              [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch           [Type:int(11), Default:NULL, Null:YES]
#   * psc_user            [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen          [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod             [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:NO]
#   * psc_restrict        [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * has_many lmce_alerts
#

class PlutoSecurity::LmceAlertType < PlutoSecurityDatabase
  set_table_name "AlertType"
  set_primary_key "PK_AlertType"

  # foreign key references
  # 1:n  (FK_AlertType)
  has_many  :lmce_alerts,
      :class_name => "PlutoSecurity::LmceAlert",
      :foreign_key => "FK_AlertType"

  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

