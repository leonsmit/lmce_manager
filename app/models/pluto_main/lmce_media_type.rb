# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:05 -0500 2008
#
# == Synopsis
# Database Table: pluto_main.MediaType
#
# * primary keys: PK_MediaType
# * foreign keys: FK_DesignObj,FK_Pipe
# * external keys: EK_AttributeType_DefaultSort
#
# == References
# * PlutoMain::LmcePipe
# * PlutoMain::LmceDesignObj
#
# == Referenced By
# * PlutoMain::LmceMediaTypeBroadcast
# * PlutoMain::LmceDeviceTemplateMediaType
# * PlutoMain::LmceMediaTypeDesignObj
#
# == Database Table Columns
#   * PK_MediaType                    [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * Define                          [Type:varchar(20), Default:NULL, Null:YES]
#   * Description                     [Type:varchar(50), Default:NULL, Null:YES]
#   * FK_DesignObj                    [Type:int(11), Default:NULL, Null:YES]
#   * DCEAware                        [Type:tinyint(4), Default:0, Null:NO]
#   * Extensions                      [Type:varchar(100), Default:NULL, Null:YES]
#   * Subdirectory                    [Type:varchar(25), Default:NULL, Null:NO]
#   * IsExternalTransmission          [Type:tinyint(1), Default:0, Null:NO]
#   * FK_Pipe                         [Type:int(11), Default:NULL, Null:YES]
#   * CanBookmark                     [Type:tinyint(1), Default:0, Null:NO]
#   * EK_AttributeType_DefaultSort    [Type:int(11), Default:NULL, Null:YES]
#   * psc_id                          [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch                       [Type:int(11), Default:NULL, Null:YES]
#   * psc_user                        [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen                      [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod                         [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:YES]
#   * psc_restrict                    [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * belongs_to lmce_attribute_type_default_sort
# * belongs_to lmce_design_obj
# * belongs_to lmce_pipe
# * has_many lmce_attribute_types
# * has_many lmce_bookmarks
# * has_many lmce_broadcasts
# * has_many lmce_device_template_media_types
# * has_many lmce_device_templates
# * has_many lmce_discs
# * has_many lmce_downloads
# * has_many lmce_file_formats
# * has_many lmce_files
# * has_many lmce_media_providers
# * has_many lmce_media_sources
# * has_many lmce_media_sub_types
# * has_many lmce_media_type_attribute_types
# * has_many lmce_media_type_broadcasts
# * has_many lmce_media_type_design_objs
# * has_many lmce_media_type_file_formats
# * has_many lmce_media_type_media_sources
# * has_many lmce_media_type_media_sub_types
# * has_many lmce_provider_sources
#

require 'pluto_media/lmce_attribute_type'
require 'pluto_media/lmce_bookmark'
require 'pluto_media/lmce_disc'
require 'pluto_media/lmce_download'
require 'pluto_media/lmce_file'
require 'pluto_media/lmce_media_provider'
require 'pluto_media/lmce_media_type_attribute_type'
require 'pluto_media/lmce_media_type_file_format'
require 'pluto_media/lmce_media_type_media_source'
require 'pluto_media/lmce_media_type_media_sub_type'
require 'pluto_media/lmce_provider_source'

include PlutoMedia

class PlutoMain::LmceMediaType < PlutoMainDatabase
  set_table_name "MediaType"
  set_primary_key "PK_MediaType"

  # foreign key references
  # FK_MediaType references PlutoMain::LmcePipe (FK_Pipe)
  belongs_to  :lmce_pipe,
      :class_name => "PlutoMain::LmcePipe",
      :foreign_key => "FK_Pipe"

  # FK_MediaType references PlutoMain::LmceDesignObj (FK_DesignObj)
  belongs_to  :lmce_design_obj,
      :class_name => "PlutoMain::LmceDesignObj",
      :foreign_key => "FK_DesignObj"

  # n:n via through join table PlutoMain::LmceMediaTypeBroadcast  (FK_MediaType)
  has_many  :lmce_media_type_broadcasts,
      :class_name => "PlutoMain::LmceMediaTypeBroadcast",
      :foreign_key => "FK_MediaType"
  has_many  :lmce_broadcasts,
      :through => :lmce_media_type_broadcasts

  # n:n via through join table PlutoMain::LmceDeviceTemplateMediaType  (FK_MediaType)
  has_many  :lmce_device_template_media_types,
      :class_name => "PlutoMain::LmceDeviceTemplateMediaType",
      :foreign_key => "FK_MediaType"
  has_many  :lmce_device_templates,
      :through => :lmce_device_template_media_types

  # 1:n  (FK_MediaType)
  has_many  :lmce_media_type_design_objs,
      :class_name => "PlutoMain::LmceMediaTypeDesignObj",
      :foreign_key => "FK_MediaType"

  # external key references
  # EK_MediaType references PlutoMedia::LmceAttributeType (EK_AttributeType_DefaultSort)
  belongs_to  :lmce_attribute_type_default_sort,
      :class_name => "PlutoMedia::LmceAttributeType",
      :foreign_key => "EK_AttributeType_DefaultSort"

  # n:n via through join table PlutoMedia::LmceMediaTypeMediaSubType  (EK_MediaType)
  has_many  :lmce_media_type_media_sub_types,
      :class_name => "PlutoMedia::LmceMediaTypeMediaSubType",
      :foreign_key => "EK_MediaType"
  has_many  :lmce_media_sub_types,
      :through => :lmce_media_type_media_sub_types

  # 1:n  (EK_MediaType)
  has_many  :lmce_discs,
      :class_name => "PlutoMedia::LmceDisc",
      :foreign_key => "EK_MediaType"

  # 1:n  (EK_MediaType)
  has_many  :lmce_downloads,
      :class_name => "PlutoMedia::LmceDownload",
      :foreign_key => "EK_MediaType"

  # 1:n  (EK_MediaType)
  has_many  :lmce_bookmarks,
      :class_name => "PlutoMedia::LmceBookmark",
      :foreign_key => "EK_MediaType"

  # n:n via through join table PlutoMedia::LmceMediaTypeAttributeType  (EK_MediaType)
  has_many  :lmce_media_type_attribute_types,
      :class_name => "PlutoMedia::LmceMediaTypeAttributeType",
      :foreign_key => "EK_MediaType"
  has_many  :lmce_attribute_types,
      :through => :lmce_media_type_attribute_types

  # 1:n  (EK_MediaType)
  has_many  :lmce_media_providers,
      :class_name => "PlutoMedia::LmceMediaProvider",
      :foreign_key => "EK_MediaType"

  # n:n via through join table PlutoMedia::LmceMediaTypeMediaSource  (EK_MediaType)
  has_many  :lmce_media_type_media_sources,
      :class_name => "PlutoMedia::LmceMediaTypeMediaSource",
      :foreign_key => "EK_MediaType"
  has_many  :lmce_media_sources,
      :through => :lmce_media_type_media_sources

  # n:n via through join table PlutoMedia::LmceMediaTypeFileFormat  (EK_MediaType)
  has_many  :lmce_media_type_file_formats,
      :class_name => "PlutoMedia::LmceMediaTypeFileFormat",
      :foreign_key => "EK_MediaType"
  has_many  :lmce_file_formats,
      :through => :lmce_media_type_file_formats

  # 1:n  (EK_MediaType)
  has_many  :lmce_files,
      :class_name => "PlutoMedia::LmceFile",
      :foreign_key => "EK_MediaType"

  # 1:n  (EK_MediaType)
  has_many  :lmce_provider_sources,
      :class_name => "PlutoMedia::LmceProviderSource",
      :foreign_key => "EK_MediaType"

  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

