# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:05 -0500 2008
#
# == Synopsis
# Database Table: pluto_main.HouseMode
#
# * primary keys: PK_HouseMode
# * foreign keys: 
# * external keys: 
#
# == References
#
# == Referenced By
# * PlutoMain::LmceDeviceHouseMode
#
# == Database Table Columns
#   * PK_HouseMode    [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * Description     [Type:varchar(25), Default:NULL, Null:NO]
#   * Define          [Type:varchar(25), Default:NULL, Null:NO]
#   * psc_id          [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch       [Type:int(11), Default:NULL, Null:YES]
#   * psc_user        [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen      [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod         [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:YES]
#   * psc_restrict    [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * has_many lmce_device_house_modes
# * has_many lmce_devices
# * has_many lmce_line_house_modes
# * has_many lmce_mode_changes
#

require 'pluto_security/lmce_mode_change'
require 'pluto_telecom/lmce_line_house_mode'

include PlutoSecurity
include PlutoTelecom

class PlutoMain::LmceHouseMode < PlutoMainDatabase
  set_table_name "HouseMode"
  set_primary_key "PK_HouseMode"

  # foreign key references
  # n:n via through join table PlutoMain::LmceDeviceHouseMode  (FK_HouseMode)
  has_many  :lmce_device_house_modes,
      :class_name => "PlutoMain::LmceDeviceHouseMode",
      :foreign_key => "FK_HouseMode"
  has_many  :lmce_devices,
      :through => :lmce_device_house_modes

  # external key references
  # 1:n  (EK_HouseMode)
  has_many  :lmce_line_house_modes,
      :class_name => "PlutoTelecom::LmceLineHouseMode",
      :foreign_key => "EK_HouseMode"

  # 1:n  (EK_HouseMode)
  has_many  :lmce_mode_changes,
      :class_name => "PlutoSecurity::LmceModeChange",
      :foreign_key => "EK_HouseMode"

  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

