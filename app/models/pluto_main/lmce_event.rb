# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:05 -0500 2008
#
# == Synopsis
# Database Table: pluto_main.Event
#
# * primary keys: PK_Event
# * foreign keys: FK_EventCategory
# * external keys: 
#
# == References
# * PlutoMain::LmceEventCategory
#
# == Referenced By
# * PlutoMain::LmceDeviceHouseMode
# * PlutoMain::LmceDeviceTemplateEvent
# * PlutoMain::LmceDeviceCategoryEvent
# * PlutoMain::LmceCannedEvent
# * PlutoMain::LmceEventHandler
# * PlutoMain::LmceEventEventParameter
#
# == Database Table Columns
#   * PK_Event            [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * FK_EventCategory    [Type:int(11), Default:0, Null:NO]
#   * Description         [Type:varchar(25), Default:NULL, Null:YES]
#   * Define              [Type:varchar(25), Default:NULL, Null:YES]
#   * Log                 [Type:tinyint(1), Default:1, Null:NO]
#   * psc_id              [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch           [Type:int(11), Default:NULL, Null:YES]
#   * psc_user            [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen          [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod             [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:YES]
#   * psc_restrict        [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * belongs_to lmce_event_category
# * has_many lmce_canned_events
# * has_many lmce_device_categories
# * has_many lmce_device_category_events
# * has_many lmce_device_house_modes
# * has_many lmce_device_template_events
# * has_many lmce_device_templates
# * has_many lmce_devices
# * has_many lmce_event_event_parameters
# * has_many lmce_event_handlers
# * has_many lmce_event_parameters
#

class PlutoMain::LmceEvent < PlutoMainDatabase
  set_table_name "Event"
  set_primary_key "PK_Event"

  # foreign key references
  # FK_Event references PlutoMain::LmceEventCategory (FK_EventCategory)
  belongs_to  :lmce_event_category,
      :class_name => "PlutoMain::LmceEventCategory",
      :foreign_key => "FK_EventCategory"

  # n:n via through join table PlutoMain::LmceDeviceHouseMode  (FK_Event)
  has_many  :lmce_device_house_modes,
      :class_name => "PlutoMain::LmceDeviceHouseMode",
      :foreign_key => "FK_Event"
  has_many  :lmce_devices,
      :through => :lmce_device_house_modes

  # n:n via through join table PlutoMain::LmceDeviceTemplateEvent  (FK_Event)
  has_many  :lmce_device_template_events,
      :class_name => "PlutoMain::LmceDeviceTemplateEvent",
      :foreign_key => "FK_Event"
  has_many  :lmce_device_templates,
      :through => :lmce_device_template_events

  # n:n via through join table PlutoMain::LmceDeviceCategoryEvent  (FK_Event)
  has_many  :lmce_device_category_events,
      :class_name => "PlutoMain::LmceDeviceCategoryEvent",
      :foreign_key => "FK_Event"
  has_many  :lmce_device_categories,
      :through => :lmce_device_category_events

  # 1:n  (FK_Event)
  has_many  :lmce_canned_events,
      :class_name => "PlutoMain::LmceCannedEvent",
      :foreign_key => "FK_Event"

  # 1:n  (FK_Event)
  has_many  :lmce_event_handlers,
      :class_name => "PlutoMain::LmceEventHandler",
      :foreign_key => "FK_Event"

  # n:n via through join table PlutoMain::LmceEventEventParameter  (FK_Event)
  has_many  :lmce_event_event_parameters,
      :class_name => "PlutoMain::LmceEventEventParameter",
      :foreign_key => "FK_Event"
  has_many  :lmce_event_parameters,
      :through => :lmce_event_event_parameters

  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

