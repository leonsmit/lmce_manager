# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:04 -0500 2008
#
# == Synopsis
# Database Table: pluto_main.Device
#
# * primary keys: PK_Device
# * foreign keys: FK_Room,FK_Installation,FK_DesignObj,FK_DeviceTemplate,FK_Device_ControlledVia,FK_Device_RouteTo
# * external keys: EK_LicensedDevice
#
# == References
# * PlutoMain::LmceRoom
# * PlutoMain::LmceDesignObj
# * PlutoMain::LmceDeviceTemplate
# * PlutoMain::LmceInstallation
#
# == Referenced By
# * PlutoMain::LmceDeviceCommandGroup
# * PlutoMain::LmceDeviceDeviceGroup
# * PlutoMain::LmceDeviceUser
# * PlutoMain::LmceDeviceOrbiter
# * PlutoMain::LmceCommandGroupCommand
# * PlutoMain::LmceDeviceDeviceData
# * PlutoMain::LmceDeviceMru
# * PlutoMain::LmceDeviceCommand
# * PlutoMain::LmceDeviceEntertainArea
# * PlutoMain::LmceDeviceDeviceRelated
# * PlutoMain::LmceDeviceQuickStart
# * PlutoMain::LmcePackageDevice
# * PlutoMain::LmceDeviceHouseMode
# * PlutoMain::LmceSoftwareDevice
# * PlutoMain::LmceDeviceStartupScript
# * PlutoMain::LmcePaidLicense
#
# == Database Table Columns
#   * PK_Device                  [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * Disabled                   [Type:tinyint(4), Default:0, Null:NO]
#   * FK_Room                    [Type:int(11), Default:NULL, Null:YES]
#   * FK_Installation            [Type:int(11), Default:NULL, Null:YES]
#   * FK_DesignObj               [Type:int(11), Default:NULL, Null:YES]
#   * Description                [Type:varchar(30), Default:NULL, Null:NO]
#   * FK_DeviceTemplate          [Type:int(11), Default:0, Null:YES]
#   * FK_Device_ControlledVia    [Type:int(11), Default:NULL, Null:YES]
#   * IPaddress                  [Type:varchar(15), Default:NULL, Null:NO]
#   * MACaddress                 [Type:varchar(17), Default:NULL, Null:YES]
#   * IgnoreOnOff                [Type:tinyint(4), Default:0, Null:NO]
#   * FK_Device_RouteTo          [Type:int(11), Default:NULL, Null:YES]
#   * NeedConfigure              [Type:tinyint(1), Default:1, Null:YES]
#   * State                      [Type:varchar(40), Default:NULL, Null:NO]
#   * Status                     [Type:varchar(40), Default:NULL, Null:NO]
#   * PingTest                   [Type:tinyint(1), Default:NULL, Null:YES]
#   * EK_LicensedDevice          [Type:int(11), Default:NULL, Null:YES]
#   * IsNewDevice                [Type:tinyint(1), Default:1, Null:NO]
#   * ManuallyConfigureEA        [Type:tinyint(1), Default:0, Null:NO]
#   * Registered                 [Type:tinyint(1), Default:0, Null:NO]
#   * psc_id                     [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch                  [Type:int(11), Default:NULL, Null:YES]
#   * psc_user                   [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen                 [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod                    [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:YES]
#   * psc_restrict               [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * belongs_to controlled_vium
# * belongs_to lmce_design_obj
# * belongs_to lmce_device_template
# * belongs_to lmce_installation
# * belongs_to lmce_room
# * belongs_to route_to
# * has_many device_controlled_vias
# * has_many device_route_tos
# * has_many lmce_alert_devices
# * has_many lmce_alerts
# * has_many lmce_alerts
# * has_many lmce_command_group_commands
# * has_many lmce_command_groups
# * has_many lmce_command_groups
# * has_many lmce_commands
# * has_many lmce_device_command_groups
# * has_many lmce_device_commands
# * has_many lmce_device_datas
# * has_many lmce_device_device_datas
# * has_many lmce_device_device_groups
# * has_many lmce_device_device_relateds
# * has_many lmce_device_entertain_areas
# * has_many lmce_device_groups
# * has_many lmce_device_house_modes
# * has_many lmce_device_mrus
# * has_many lmce_device_orbiters
# * has_many lmce_device_quick_starts
# * has_many lmce_device_startup_scripts
# * has_many lmce_device_users
# * has_many lmce_entertain_areas
# * has_many lmce_files
# * has_many lmce_house_modes
# * has_many lmce_orbiters
# * has_many lmce_package_devices
# * has_many lmce_packages
# * has_many lmce_paid_licenses
# * has_many lmce_rip_statuses
# * has_many lmce_software_devices
# * has_many lmce_softwares
# * has_many lmce_startup_scripts
# * has_many lmce_users
# * has_one lmce_disc_location
# * has_one lmce_disc_location
#

require 'pluto_media/lmce_disc_location'
require 'pluto_media/lmce_file'
require 'pluto_media/lmce_rip_status'
require 'pluto_security/lmce_alert'
require 'pluto_security/lmce_alert_device'

include PlutoMedia
include PlutoSecurity

class PlutoMain::LmceDevice < PlutoMainDatabase
  set_table_name "Device"
  set_primary_key "PK_Device"

  # foreign key references
  # FK_Device references PlutoMain::LmceRoom (FK_Room)
  belongs_to  :lmce_room,
      :class_name => "PlutoMain::LmceRoom",
      :foreign_key => "FK_Room"

  # FK_Device references PlutoMain::LmceDesignObj (FK_DesignObj)
  belongs_to  :lmce_design_obj,
      :class_name => "PlutoMain::LmceDesignObj",
      :foreign_key => "FK_DesignObj"

  # FK_Device references PlutoMain::LmceDeviceTemplate (FK_DeviceTemplate)
  belongs_to  :lmce_device_template,
      :class_name => "PlutoMain::LmceDeviceTemplate",
      :foreign_key => "FK_DeviceTemplate"

  # FK_Device references PlutoMain::LmceInstallation (FK_Installation)
  belongs_to  :lmce_installation,
      :class_name => "PlutoMain::LmceInstallation",
      :foreign_key => "FK_Installation"

  # n:n via through join table PlutoMain::LmceDeviceCommandGroup  (FK_Device)
  has_many  :lmce_device_command_groups,
      :class_name => "PlutoMain::LmceDeviceCommandGroup",
      :foreign_key => "FK_Device"
  has_many  :lmce_command_groups,
      :through => :lmce_device_command_groups

  # n:n via through join table PlutoMain::LmceDeviceDeviceGroup  (FK_Device)
  has_many  :lmce_device_device_groups,
      :class_name => "PlutoMain::LmceDeviceDeviceGroup",
      :foreign_key => "FK_Device"
  has_many  :lmce_device_groups,
      :through => :lmce_device_device_groups

  # n:n via through join table PlutoMain::LmceDeviceUser  (FK_Device)
  has_many  :lmce_device_users,
      :class_name => "PlutoMain::LmceDeviceUser",
      :foreign_key => "FK_Device"
  has_many  :lmce_users,
      :through => :lmce_device_users

  # n:n via through join table PlutoMain::LmceDeviceOrbiter  (FK_Device)
  has_many  :lmce_device_orbiters,
      :class_name => "PlutoMain::LmceDeviceOrbiter",
      :foreign_key => "FK_Device"
  has_many  :lmce_orbiters,
      :through => :lmce_device_orbiters

  # n:n via through join table PlutoMain::LmceCommandGroupCommand  (FK_Device)
  has_many  :lmce_command_group_commands,
      :class_name => "PlutoMain::LmceCommandGroupCommand",
      :foreign_key => "FK_Device"
  has_many  :lmce_command_groups,
      :through => :lmce_command_group_commands

  # n:n via through join table PlutoMain::LmceDeviceDeviceData  (FK_Device)
  has_many  :lmce_device_device_datas,
      :class_name => "PlutoMain::LmceDeviceDeviceData",
      :foreign_key => "FK_Device"
  has_many  :lmce_device_datas,
      :through => :lmce_device_device_datas

  # 1:n  (FK_Device)
  has_many  :lmce_device_mrus,
      :class_name => "PlutoMain::LmceDeviceMru",
      :foreign_key => "FK_Device"

  # n:n via through join table PlutoMain::LmceDeviceCommand  (FK_Device)
  has_many  :lmce_device_commands,
      :class_name => "PlutoMain::LmceDeviceCommand",
      :foreign_key => "FK_Device"
  has_many  :lmce_commands,
      :through => :lmce_device_commands

  # n:n via through join table PlutoMain::LmceDeviceEntertainArea  (FK_Device)
  has_many  :lmce_device_entertain_areas,
      :class_name => "PlutoMain::LmceDeviceEntertainArea",
      :foreign_key => "FK_Device"
  has_many  :lmce_entertain_areas,
      :through => :lmce_device_entertain_areas

  # n:n via through join table PlutoMain::LmceDeviceDeviceRelated  (FK_Device)
  has_many  :lmce_device_device_relateds,
      :class_name => "PlutoMain::LmceDeviceDeviceRelated",
      :foreign_key => "FK_Device"

  # 1:n  (FK_Device)
  has_many  :lmce_device_quick_starts,
      :class_name => "PlutoMain::LmceDeviceQuickStart",
      :foreign_key => "FK_Device"

  # n:n via through join table PlutoMain::LmcePackageDevice  (FK_Device)
  has_many  :lmce_package_devices,
      :class_name => "PlutoMain::LmcePackageDevice",
      :foreign_key => "FK_Device"
  has_many  :lmce_packages,
      :through => :lmce_package_devices

  # n:n via through join table PlutoMain::LmceDeviceHouseMode  (FK_Device)
  has_many  :lmce_device_house_modes,
      :class_name => "PlutoMain::LmceDeviceHouseMode",
      :foreign_key => "FK_Device"
  has_many  :lmce_house_modes,
      :through => :lmce_device_house_modes

  # n:n via through join table PlutoMain::LmceSoftwareDevice  (FK_Device)
  has_many  :lmce_software_devices,
      :class_name => "PlutoMain::LmceSoftwareDevice",
      :foreign_key => "FK_Device"
  has_many  :lmce_softwares,
      :through => :lmce_software_devices

  # n:n via through join table PlutoMain::LmceDeviceStartupScript  (FK_Device)
  has_many  :lmce_device_startup_scripts,
      :class_name => "PlutoMain::LmceDeviceStartupScript",
      :foreign_key => "FK_Device"
  has_many  :lmce_startup_scripts,
      :through => :lmce_device_startup_scripts

  # 1:n  (FK_Device)
  has_many  :lmce_paid_licenses,
      :class_name => "PlutoMain::LmcePaidLicense",
      :foreign_key => "FK_Device"

  # external key references
  # 1:1  (EK_Device)
  has_one  :lmce_disc_location,
      :class_name => "PlutoMedia::LmceDiscLocation",
      :foreign_key => "EK_Device"

  # 1:1  (EK_Device_Ripping)
  has_one  :lmce_disc_location,
      :class_name => "PlutoMedia::LmceDiscLocation",
      :foreign_key => "EK_Device"

  # 1:n  (EK_Device)
  has_many  :lmce_files,
      :class_name => "PlutoMedia::LmceFile",
      :foreign_key => "EK_Device"

  # 1:n  (EK_Device)
  has_many  :lmce_alerts,
      :class_name => "PlutoSecurity::LmceAlert",
      :foreign_key => "EK_Device"

  # n:n via through join table PlutoSecurity::LmceAlertDevice  (EK_Device)
  has_many  :lmce_alert_devices,
      :class_name => "PlutoSecurity::LmceAlertDevice",
      :foreign_key => "EK_Device"
  has_many  :lmce_alerts,
      :through => :lmce_alert_devices

  # 1:n  (EK_Device)
  has_many  :lmce_rip_statuses,
      :class_name => "PlutoMedia::LmceRipStatus",
      :foreign_key => "EK_Device"

  # self references
  belongs_to  :controlled_vium,
      :class_name => "PlutoMain::LmceDevice",
      :foreign_key => "FK_Device_ControlledVia"
  has_many  :device_controlled_vias,
      :class_name => "PlutoMain::LmceDevice",
      :foreign_key => "FK_Device_ControlledVia"
  belongs_to  :route_to,
      :class_name => "PlutoMain::LmceDevice",
      :foreign_key => "FK_Device_RouteTo"
  has_many  :device_route_tos,
      :class_name => "PlutoMain::LmceDevice",
      :foreign_key => "FK_Device_RouteTo"
  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

