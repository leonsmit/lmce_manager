# Copyright 2008 by Roy Wright
# License: GPL version 2 (http://www.opensource.org/licenses/gpl-2.0.php)
# generated by mysql2models.rb 0.2 Tue Jun 17 01:17:04 -0500 2008
#
# == Synopsis
# Database Table: pluto_main.CommandGroup_D
#
# * primary keys: PK_CommandGroup_D
# * foreign keys: FK_Criteria_Orbiter
# * external keys: 
#
# == References
#
# == Referenced By
# * PlutoMain::LmceDesignObjVariationZone
# * PlutoMain::LmceCommandGroupDCommand
#
# == Database Table Columns
#   * PK_CommandGroup_D      [Type:int(11), Default:NULL, Key:PRI, Null:NO, Extra:auto_increment]
#   * FK_Criteria_Orbiter    [Type:int(11), Default:NULL, Null:YES]
#   * psc_id                 [Type:int(11), Default:NULL, Key:UNI, Null:YES]
#   * psc_batch              [Type:int(11), Default:NULL, Null:YES]
#   * psc_user               [Type:int(11), Default:NULL, Null:YES]
#   * psc_frozen             [Type:tinyint(1), Default:0, Null:YES]
#   * psc_mod                [Type:timestamp, Default:CURRENT_TIMESTAMP, Null:YES]
#   * psc_restrict           [Type:int(11), Default:NULL, Null:YES]
#
# == Associations
# * has_many lmce_command_group_d_commands
# * has_many lmce_commands
# * has_many lmce_design_obj_variation_zones
#

class PlutoMain::LmceCommandGroupD < PlutoMainDatabase
  set_table_name "CommandGroup_D"
  set_primary_key "PK_CommandGroup_D"

  # foreign key references
  # 1:n  (FK_CommandGroup_D)
  has_many  :lmce_design_obj_variation_zones,
      :class_name => "PlutoMain::LmceDesignObjVariationZone",
      :foreign_key => "FK_CommandGroup_D"

  # n:n via through join table PlutoMain::LmceCommandGroupDCommand  (FK_CommandGroup_D)
  has_many  :lmce_command_group_d_commands,
      :class_name => "PlutoMain::LmceCommandGroupDCommand",
      :foreign_key => "FK_CommandGroup_D"
  has_many  :lmce_commands,
      :through => :lmce_command_group_d_commands

  # handle psc_mod timestamping

# Set the psc_mod timestamp to the current time when creating a record.
  def before_create
    self.psc_mod ||= Time.now
  end

# Set the psc_mod timestamp to the current time when updating a record.
  def before_update
    self.psc_mod = Time.now
  end

  # add your model extensions after this line

end

